{"version":3,"sources":["containers/TaskContainer.jsx","containers/MainContainer.jsx","components/MyTaskLogo.jsx","components/TaskCounter.jsx","components/TaskSearch.jsx","components/TaskList.jsx","components/TaskItem.jsx","components/NewTask.jsx","components/Form.jsx","components/Header.jsx","app/useLocalStorage.js","app/useTasks.js","components/Modal.jsx","components/TaskError.jsx","components/TaskLoading.jsx","components/TaskEmpty.jsx","components/EmptySearchResults.jsx","components/useStorageListener.jsx","components/ChangeAlert.jsx","app/index.js","index.js"],"names":["TaskSection","styled","section","TaskContainer","props","children","Container","div","MainContainer","Logo","img","MyTaskLogo","Fragment","src","alt","Counter","p","$loading","TaskCounter","taskCompleted","totalTask","loading","task","every","tarea","completed","TaskInput","input","TaskSearch","searchValue","setSearchValue","Value","placeholder","onInputCapture","e","target","value","disabled","List","TaskList","taskLoading","error","taskError","taskLength","taskEmpty","searchArray","length","emptySearchResults","map","Item","DeleteButton","CompletedButton","TaskText","TaskItem","onClick","OnComplete","size","color","taskText","OnDelete","Add","NewTask","setOpenModal","prevState","TaskForm","form","NewTaskImput","Buttons","CancelButton","button","NewTaskButton","Title","h1","Message","Form","addTask","React","useState","newTask","setNewTask","exist","setExist","onSubmit","some","Task","text","toLowerCase","preventDefault","onChange","type","Header","Children","toArray","child","cloneElement","initialState","item","initialValue","sync","actionTypes","success","syncUp","save","reducer","state","action","payload","useLocalStorage","itemName","useReducer","dispatch","onError","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","setItem","stringify","onSuccess","saveItem","newItem","onSave","useTasks","saveTasks","syncUpTasks","openModal","filter","ta","imputText","includes","neWTaskArray","push","taskIndex","findIndex","splice","Close","Div","Modal","ReactDOM","createPortal","document","getElementById","ErrorMessage","TaskError","LoadingMessage","TaskLoading","EmptyMessage","TaskEmpty","EmptySMessage","EmptySearchResults","useStorageListener","storageChange","setStorageChange","window","addEventListener","change","key","console","log","toggleShow","ChangeDiv","ChangeMessage","RefreshButton","styledWarningIcon","fontSize","marginBottom","ChangeAlert","style","App","render","StrictMode"],"mappings":"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","file":"static/js/main.88f56750.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TaskSection = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 28rem;\r\n    height: auto;\r\n    max-height: 120rem;\r\n    background-color: #142d4c;\r\n    border-radius: 2rem;\r\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n`;\r\n\r\nexport default function TaskContainer(props) {\r\n    return (\r\n        <TaskSection>\r\n            {props.children}\r\n        </TaskSection>\r\n    );\r\n\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  align-items: center;\r\n  justify-items: center;\r\n`;\r\n\r\nexport default function MainContainer(props) {\r\n    return <Container>{props.children}</Container>;\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Logo = styled.img`\r\n    display:flex;\r\n    margin: 2rem auto;\r\n    width: 10rem;\r\n    height: 10rem;\r\n`;\r\n\r\nexport default function MyTaskLogo(){\r\n    return(\r\n        <React.Fragment>\r\n        <Logo src=\"https://cdn-icons-png.flaticon.com/512/906/906334.png\" alt=\"Logo de MyTask\"/>\r\n        </React.Fragment>\r\n    );        \r\n\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Counter = styled.p`\r\n  font-size: 1.8rem;\r\n  text-align: center;\r\n  color: #ececec;\r\n  font-weight: 500;\r\n  margin-bottom: 2rem;\r\n  margin 0rem 1rem 1rem 1rem;\r\n  opacity: ${props => props.$loading ? '0.15' : '1'}\r\n`;\r\n\r\nexport default function TaskCounter({ taskCompleted, totalTask, loading, task }) {\r\n  return (\r\n    <Counter $loading={loading}>\r\n      {(totalTask === 0 && !loading)\r\n        ? \"Bienvenido, crea tu primera tarea\"\r\n        : (loading ? \"Cargando sus tareas\"\r\n          : (!loading && task.every(tarea => tarea.completed)\r\n            ? `Usted completó todas sus ${taskCompleted} tareas`\r\n            : `¡Hola! Llevas ${taskCompleted} de ${totalTask} tarea${totalTask === 1\r\n              ? \"\"\r\n              : \"s\"} completadas`))}\r\n    </Counter>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TaskInput = styled.input`\r\n  display:flex;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  height: 5rem;\r\n  padding: 0 2rem;\r\n  border-radius: 1rem;\r\n  border-style: none;\r\n  background-color: #385170;\r\n  color: white;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport default function TaskSearch({ searchValue, setSearchValue,loading }) {\r\n    const OnSearchValues = (e) => {\r\n        setSearchValue(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <TaskInput\r\n            Value={searchValue}\r\n            placeholder=\"Buscar tarea\"\r\n            onInputCapture={OnSearchValues}\r\n            disabled={loading}\r\n        />\r\n    );\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst List = styled.div`\r\n    width: 90%;\r\n    height: auto;\r\n    margin: 0 auto;\r\n    \r\n\r\n`;\r\n\r\nexport default function TaskList(props){\r\n    return(\r\n        <List>\r\n            {props.loading && props.taskLoading()}\r\n            {props.error && props.taskError()}\r\n            {(!props.loading && !props.taskLength) && props.taskEmpty()}\r\n            {((!props.loading && !props.searchArray.length) && props.taskLength>0 ) && props.emptySearchResults(props.searchValue)}\r\n            {!props.loading && props.searchArray.map(props.children)}\r\n        </List>\r\n    );\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AiFillCheckCircle } from \"react-icons/ai\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\n\r\nconst Item = styled.div`\r\n  display: flex;\r\n  padding: 1rem 2rem;\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  width: 100%;\r\n  height: 5rem;\r\n  background-color: #385170;\r\n  border-radius: 1rem;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\r\n`;\r\nconst DeleteButton = styled.div`\r\n  cursor: pointer;\r\n  color: #9fd3c7;\r\n  transition: 0.5s;\r\n\r\n  &:hover {\r\n    color: #f95959;\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\nconst CompletedButton = styled.div`\r\n  cursor: pointer;\r\n  transition: 0.5s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst TaskText = styled.p`\r\n  font-size: 1.5rem;\r\n  color: white;\r\n  text-align: center;\r\n  text-decoration: ${(props) => (props.completed ? \"line-through\" : \"none\")};\r\n`;\r\n\r\nexport default function TaskItem(props) {\r\n  return (\r\n    <Item>\r\n      <CompletedButton>\r\n        <AiFillCheckCircle\r\n          onClick={props.OnComplete}\r\n          size=\"2rem\"\r\n          color={`${props.completed ? \"#cbf078\" : \"#9fd3c7\"}`}\r\n        />\r\n      </CompletedButton>\r\n      <TaskText completed={props.completed}>{props.taskText}</TaskText>\r\n      <DeleteButton>\r\n        <AiFillDelete onClick={props.OnDelete} size=\"2rem\" />\r\n      </DeleteButton>\r\n    </Item>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AiFillPlusCircle } from \"react-icons/ai\";\r\n\r\nexport const Add = styled.div`\r\n  cursor: pointer;\r\n  width: 4rem;\r\n  margin: 2rem auto;\r\n  transition: 0.5s;\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n  position:relative;\r\n`;\r\n\r\nexport default function NewTask(props) {\r\n  const open_close = () => {\r\n    props.setOpenModal((prevState) => !prevState);\r\n  };\r\n  return (\r\n    <Add>\r\n      <AiFillPlusCircle onClick={open_close} size=\"4rem\" color=\"#9fd3c7\" />\r\n    </Add>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BiTask } from \"react-icons/bi\";\r\nimport { BiTaskX } from \"react-icons/bi\";\r\n\r\nconst TaskForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 28rem;\r\n  height: 24rem;\r\n  justify-content: center;\r\n  aling-items: center;\r\n  padding: 1rem 1rem;\r\n  background-color: #142d4c;\r\n  border-radius: 2rem;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n`;\r\nconst NewTaskImput = styled.input`\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  margin-bottom: 2rem;\r\n  height: 7rem;\r\n  padding: 0 2rem;\r\n  border-radius: 1rem;\r\n  border-style: none;\r\n  background-color: #385170;\r\n  color: white;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst CancelButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background: none;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: 0.5s;\r\n  &:hover {\r\n    color: #f95959;\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n\r\nconst NewTaskButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  background: none;\r\n  color: white;\r\n  border: none;\r\n  flex-direction: column;\r\n  cursor: pointer;\r\n  transition: 0.5s;\r\n  &:hover {\r\n    color: rgb(187 227 97);\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  padding-bottom: 1rem;\r\n`;\r\nconst Message = styled.p`\r\n  text-align: center;\r\n  padding-bottom: 1rem;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nfunction Form({ task, addTask, setOpenModal }) {\r\n  const [newTask, setNewTask] = React.useState(\"\");\r\n  const [exist, setExist] = React.useState(false);\r\n\r\n  const onCancel = (e) => {\r\n    setOpenModal((prevState) => !prevState);\r\n    e.preventDefault();\r\n  };\r\n  const onSubmit = (e) => {\r\n    task.some((Task) => Task.text.toLowerCase() === newTask.toLowerCase())\r\n      ? setExist(true) : addTask(newTask)\r\n    e.preventDefault();\r\n  };\r\n  const onChange = (e) => {\r\n    setExist(false)\r\n    setNewTask(e.target.value);\r\n  };\r\n  return (\r\n    <TaskForm onSubmit={onSubmit}>\r\n      <Title>Escribe tu tarea acá</Title>\r\n      <NewTaskImput onChange={onChange} placeholder=\"Escriba su tarea\" />\r\n      {(exist && <Message>la tarea {newTask} ya existe</Message>)}\r\n      <Buttons>\r\n        <NewTaskButton type=\"submit\">\r\n          <BiTask size={\"4rem\"} />\r\n          Añadir\r\n        </NewTaskButton>\r\n        <CancelButton onClick={onCancel}>\r\n          <BiTaskX size={\"4rem\"} />\r\n          Cancelar\r\n        </CancelButton>\r\n      </Buttons>\r\n    </TaskForm>\r\n  );\r\n}\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\n\r\nfunction Header({children,loading}){\r\n    return(\r\n        <header>\r\n            {React.Children.toArray(children).map(child => React.cloneElement(child,{loading}))}\r\n        </header>\r\n    );\r\n}   \r\nexport default Header ","import React from \"react\";\r\nfunction useLocalStorage(itemName, initialValue) {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState({initialValue}))\r\n    const {\r\n      loading, \r\n      error, \r\n      item, \r\n      sync\r\n    } = state\r\n  \r\n  // const [loading, setLoading] = React.useState(true);\r\n  // const [error, setError] = React.useState(false);\r\n  // const [item, setItem] = React.useState(initialValue);\r\n  // const [sync, setSync] = React.useState(false);\r\n\r\n  //Actions creators\r\n  const onError = (e) => {dispatch({type:actionTypes.error, payload: e})};\r\n  const onSuccess= (parsedItem) =>{dispatch({type:actionTypes.success, payload:parsedItem})}\r\n  const onSyncUp = ()=>{dispatch({type: actionTypes.syncUp})}\r\n  const onSave = (newItem) => {dispatch({type: actionTypes.save, payload:newItem})}\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      try {\r\n        const localStorageItem = localStorage.getItem(itemName);\r\n        let parsedItem;\r\n\r\n        if (!localStorageItem) {\r\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n          parsedItem = initialValue;\r\n        } else {\r\n          parsedItem = JSON.parse(localStorageItem);\r\n        }\r\n        onSuccess(parsedItem)\r\n      } catch (e) {\r\n        onError(e)\r\n      }\r\n    }, 1000);\r\n  },[sync]);\r\n\r\n  const saveItem = (newItem) => {\r\n    try {\r\n      localStorage.setItem(itemName, JSON.stringify(newItem));\r\n      onSave(newItem)\r\n    } catch (e) {\r\n      onError(e)\r\n    }\r\n  };\r\n  const syncUp = () =>{\r\n    onSyncUp()\r\n  }\r\n  \r\n\r\n  return { item, saveItem, loading, error, syncUp};\r\n}\r\n\r\nconst initialState= ({initialValue}) => ({\r\n      loading:true, \r\n      error:false, \r\n      item:initialValue, \r\n      sync:false,\r\n})\r\n\r\nconst actionTypes={\r\n  error: 'ERROR',\r\n  success: 'SUCCESS',\r\n  syncUp: 'SYNCUP',\r\n  save: 'SAVE',\r\n}\r\n\r\nconst reducer = (state,action) =>{\r\n  switch(action.type){\r\n    case actionTypes.error:\r\n      return{\r\n        ...state,\r\n        error: true\r\n      }\r\n    case actionTypes.success:\r\n      return {\r\n        ...state,\r\n        item: action.payload,\r\n        loading: false,\r\n        sync: true,\r\n      }\r\n    case actionTypes.syncUp:\r\n      return{\r\n        ...state,\r\n        loading:true,\r\n        sync:false,\r\n      }\r\n    case actionTypes.save:\r\n      return{\r\n        ...state,\r\n        item: action.payload,\r\n      }\r\n    default:\r\n      return{\r\n        ...state\r\n      }\r\n  }\r\n}\r\n\r\n\r\nexport default useLocalStorage;\r\n","import React from \"react\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\nfunction useTasks() {\r\n  const {\r\n    item: task,\r\n    saveItem: saveTasks,\r\n    loading,\r\n    error,\r\n    syncUp: syncUpTasks,\r\n  } = useLocalStorage(\"TASKS_V1.0\", []);\r\n\r\n  const [searchValue, setSearchValue] = React.useState(\"\");\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n\r\n  const taskCompleted = task.filter((ta) => ta.completed).length;\r\n  const totalTask = task.length;\r\n\r\n  let searchArray = [];\r\n\r\n  if (searchValue.length <= 0) {\r\n    searchArray = task;\r\n  } else {\r\n    searchArray = task.filter((ta) => {\r\n      const imputText = searchValue.toLowerCase();\r\n      const taskText = ta.text.toLowerCase();\r\n      return taskText.includes(imputText);\r\n    });\r\n  }\r\n  const addTask = (text)=>{\r\n    const neWTaskArray = [...task];\r\n    neWTaskArray.push({\r\n        completed:false,\r\n        text\r\n    });\r\n    saveTasks(neWTaskArray)\r\n    setOpenModal((prevState)=> !prevState)\r\n  }\r\n\r\n  const OnComplete = (text) => {\r\n    const taskIndex = task.findIndex((ta) => ta.text === text);\r\n    const neWTaskArray = [...task];\r\n    neWTaskArray[taskIndex].completed = !neWTaskArray[taskIndex].completed;\r\n    saveTasks(neWTaskArray);\r\n  };\r\n  const OnDelete = (text) => {\r\n    const taskIndex = task.findIndex((ta) => ta.text === text);\r\n    const neWTaskArray = [...task];\r\n    neWTaskArray.splice(taskIndex, 1);\r\n    saveTasks(neWTaskArray);\r\n  };\r\n  return (\r\n    {\r\n        task,\r\n        addTask,\r\n        openModal,\r\n        setOpenModal,\r\n        taskCompleted,\r\n        totalTask,                       \r\n        searchValue,\r\n        setSearchValue,\r\n        searchArray,\r\n        OnComplete,\r\n        OnDelete,\r\n        loading,\r\n        error,\r\n        syncUpTasks,\r\n    })\r\n}\r\nexport default useTasks\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport { AiFillPlusCircle } from \"react-icons/ai\";\r\nimport { Add } from \"./NewTask\";\r\n\r\nexport const Close = styled(Add)`\r\n  &:hover {\r\n    transform: scale(1.2) rotate(45deg);\r\n  }\r\n`;\r\n\r\nexport const Div = styled.div`\r\n  transition: 2s;\r\n  background: rgba(32, 35, 41, 0.8);\r\n  position: fixed;\r\n  top: -10px;\r\n  left: -10px;\r\n  right: -10px;\r\n  bottom: -10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  color: white;\r\n`;\r\n\r\nfunction Modal({ openModal, setOpenModal, children }) {\r\n\r\n  return ReactDOM.createPortal(\r\n    <Div>\r\n      {children}\r\n      <Close>\r\n        <AiFillPlusCircle\r\n          onClick={() => setOpenModal(!openModal)}\r\n          size=\"4rem\"\r\n          color=\"#9fd3c7\"\r\n        />\r\n      </Close>\r\n    </Div>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n}\r\nexport default Modal;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ErrorMessage = styled.p`\r\n    color: white;\r\n    font-size: 2rem;\r\n    text-aling:center;\r\n`;\r\n\r\n\r\nexport default function TaskError() {\r\n    return (\r\n        <ErrorMessage>Cargando tareas</ErrorMessage>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst LoadingMessage = styled.p`\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    padding-top: 2rem;\r\n    text-align:center;\r\n`;\r\n\r\n\r\nexport default function TaskLoading() {\r\n    return (\r\n        <LoadingMessage>Cargando tareas...</LoadingMessage>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst EmptyMessage = styled.p`\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    text-align:center;\r\n    padding-top:2rem;\r\n`;\r\n\r\n\r\nexport default function TaskEmpty() {\r\n    return (\r\n        <EmptyMessage>Crea tu primera tarea</EmptyMessage>\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nconst EmptySMessage = styled.p`\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    text-align:center;\r\n    padding-top:2rem;\r\n`;\r\n\r\nexport default function EmptySearchResults(props) {\r\n    return (\r\n        <EmptySMessage>No existe la tarea {props.searchValue}</EmptySMessage>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nfunction useStorageListener(syncUpTasks){\r\n        const [storageChange, setStorageChange] = React.useState(false)\r\n\r\n        window.addEventListener('storage', (change) => {\r\n            if (change.key === 'TASKS_V1.0') {\r\n                console.log(change)\r\n                setStorageChange(true)\r\n            }\r\n        });\r\n\r\n        const toggleShow = ()=>{\r\n            syncUpTasks()\r\n            setStorageChange(false)\r\n        }\r\n\r\n        return {toggleShow, storageChange};\r\n}\r\nexport default useStorageListener","import React from 'react'\r\nimport useStorageListener from './useStorageListener'\r\nimport styled from 'styled-components'\r\nimport { HiOutlineRefresh } from 'react-icons/hi'\r\nimport {IoIosWarning} from 'react-icons/io'\r\nimport { Div } from './Modal'\r\n\r\nconst ChangeDiv = styled.div`\r\n    border-radius: 1rem;\r\n    background-color: #f95959;\r\n    display: flex;\r\n    width: 30rem;\r\n    height: 18rem;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items:center;\r\n    padding: 1rem 1rem 1rem 1rem;\r\n`;\r\n\r\nconst ChangeMessage = styled.p`\r\n    font-size:1.5rem;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\nconst RefreshButton = styled.button`\r\n    transition: 0.5s;\r\n    background: none;\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n    &:hover{\r\n        transform: scale(1.4);\r\n    };\r\n`;\r\n const styledWarningIcon ={\r\n    fontSize: \"4rem\",\r\n    color: \"yellow\",\r\n    marginBottom: \"1.5rem\" \r\n } \r\nexport default function ChangeAlert({syncUpTasks}) {\r\n    const {storageChange,toggleShow} = useStorageListener(syncUpTasks)\r\n\r\n    if (storageChange) {\r\n        return (\r\n            <Div>\r\n                <ChangeDiv>\r\n                    <IoIosWarning style={styledWarningIcon}/>\r\n                    <ChangeMessage>Se han realizado cambios</ChangeMessage>\r\n                    <RefreshButton onClick={toggleShow}><HiOutlineRefresh size={\"2rem\"}/></RefreshButton>\r\n                </ChangeDiv>\r\n            </Div>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}","import React from \"react\";\r\nimport TaskContainer from \"../containers/TaskContainer\";\r\nimport MainContainer from \"../containers/MainContainer\";\r\nimport MyTaskLogo from \"../components/MyTaskLogo\";\r\nimport TaskCounter from \"../components/TaskCounter\";\r\nimport TaskSearch from \"../components/TaskSearch\";\r\nimport TaskList from \"../components/TaskList\";\r\nimport TaskItem from \"../components/TaskItem\";\r\nimport NewTask from \"../components/NewTask\";\r\nimport Form from \"../components/Form\";\r\nimport Header from \"../components/Header\";\r\nimport useTasks from \"./useTasks\";\r\nimport Modal from \"../components/Modal\";\r\nimport TaskError from \"../components/TaskError\";\r\nimport TaskLoading from \"../components/TaskLoading\";\r\nimport TaskEmpty from \"../components/TaskEmpty\";\r\nimport EmptySearchResults from \"../components/EmptySearchResults\";\r\nimport ChangeAlert from \"../components/ChangeAlert\";\r\n\r\nfunction App() {\r\n  const {\r\n    task,\r\n    addTask,\r\n    searchValue,\r\n    setSearchValue,\r\n    taskCompleted,\r\n    totalTask,\r\n    error,\r\n    loading,\r\n    searchArray,\r\n    OnDelete,\r\n    OnComplete,\r\n    openModal,\r\n    setOpenModal,\r\n    syncUpTasks,\r\n  } = useTasks();\r\n  return (\r\n    <React.Fragment>\r\n      <MainContainer>\r\n        <TaskContainer>\r\n          <Header loading={loading}>\r\n            <MyTaskLogo />\r\n            <TaskCounter task={task} taskCompleted={taskCompleted} totalTask={totalTask} />\r\n            <TaskSearch\r\n              searchValue={searchValue}\r\n              setSearchValue={setSearchValue}\r\n            />\r\n          </Header>\r\n          <TaskList\r\n            task = {task}\r\n            loading={loading}\r\n            error={error}\r\n            searchValue={searchValue}\r\n            searchArray={searchArray}\r\n            taskLength={task.length}\r\n            taskLoading={() => <TaskLoading/>}\r\n            taskError={() => <TaskError/>}\r\n            taskEmpty={() => <TaskEmpty/>}\r\n            emptySearchResults = {(text) => <EmptySearchResults searchValue={text}/>}\r\n            >\r\n            {(task) => (\r\n              <TaskItem\r\n                taskText={task.text}\r\n                key={task.text}\r\n                OnDelete={() => OnDelete(task.text)}\r\n                completed={task.completed}\r\n                OnComplete={() => OnComplete(task.text)}\r\n              />\r\n            )}\r\n          </TaskList>\r\n\r\n          <NewTask setOpenModal={setOpenModal} />\r\n\r\n          <ChangeAlert syncUpTasks={syncUpTasks}/>\r\n\r\n        </TaskContainer>\r\n      </MainContainer>\r\n      {!!openModal && (\r\n        <Modal setOpenModal={setOpenModal} openModal={openModal}>\r\n          <Form task={task} addTask={addTask} setOpenModal={setOpenModal} />\r\n        </Modal>\r\n      )}\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}